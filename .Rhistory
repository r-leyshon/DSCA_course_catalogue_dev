print(status_message)
} else if (length(setdiff(x = newstate_course_names, y = prior_state_course_names)) == 0 &
length(setdiff(x = prior_state_course_names, y = newstate_course_names)) > 0) {
removed_course <-  setdiff(x = prior_state_course_names, y = newstate_course_names)
current_status <- condition_statuses[4]
print(current_status)
status_message <- paste0(
"The following course(s) have been removed: ",
paste0(removed_course, collapse = ", ")
)
print(status_message)
}
prior_state_course_names <- c(prior_state_course_names, "some course that was removed", "and another deleted course")
if (all(newstate_course_names == prior_state_course_names)) {
current_status <- condition_statuses[1]
status_message <- "Course catalogue script run. No change detected."
print(current_status)
print(status_message)
} else if (length(setdiff(x = newstate_course_names, y = prior_state_course_names)) > 0 &
length(setdiff(x = prior_state_course_names, y = newstate_course_names)) > 0) {
new_course <-  setdiff(x = newstate_course_names, y = prior_state_course_names)
removed_course <-  setdiff(x = prior_state_course_names, y = newstate_course_names)
current_status <- condition_statuses[2]
print(current_status)
status_message <- paste0(
"The following course(s) have been added: ", paste0(new_course, collapse = ", "),
". In addition, the following course(s) have been removed: ", paste0(removed_course, collapse = ", ")
)
print(status_message)
} else if (length(setdiff(x = newstate_course_names, y = prior_state_course_names)) > 0 &
length(setdiff(x = prior_state_course_names, y = newstate_course_names)) == 0) {
new_course <-  setdiff(x = newstate_course_names, y = prior_state_course_names)
current_status <- condition_statuses[3]
print(current_status)
status_message <- paste0(
"The following course(s) have been added: ",
paste0(new_course, collapse = ", ")
)
print(status_message)
} else if (length(setdiff(x = newstate_course_names, y = prior_state_course_names)) == 0 &
length(setdiff(x = prior_state_course_names, y = newstate_course_names)) > 0) {
removed_course <-  setdiff(x = prior_state_course_names, y = newstate_course_names)
current_status <- condition_statuses[4]
print(current_status)
status_message <- paste0(
"The following course(s) have been removed: ",
paste0(removed_course, collapse = ", ")
)
print(status_message)
}
newstate_course_versions <- paste(output_dataframe$readme_title, output_dataframe$version_number,
sep = " - Version ")
prior_state_course_versions <- newstate_course_versions
prior_state_course_versions
prior_state_course_versions[12]
prior_state_course_versions[12] <- "Version controlled RStudio projects - Version 1.1"
prior_state_course_versions
prior_state_course_versions
newstate_course_versions
if (all(newstate_course_names == prior_state_course_names)) {
current_status <- condition_statuses[1]
status_message <- "Course catalogue script run. No change detected."
print(current_status)
print(status_message)
} else if (length(setdiff(x = newstate_course_names, y = prior_state_course_names)) > 0 &
length(setdiff(x = prior_state_course_names, y = newstate_course_names)) > 0) {
new_course <-  setdiff(x = newstate_course_names, y = prior_state_course_names)
removed_course <-  setdiff(x = prior_state_course_names, y = newstate_course_names)
current_status <- condition_statuses[2]
print(current_status)
status_message <- paste0(
"The following course(s) have been added: ", paste0(new_course, collapse = ", "),
". In addition, the following course(s) have been removed: ", paste0(removed_course, collapse = ", ")
)
print(status_message)
} else if (length(setdiff(x = newstate_course_names, y = prior_state_course_names)) > 0 &
length(setdiff(x = prior_state_course_names, y = newstate_course_names)) == 0) {
new_course <-  setdiff(x = newstate_course_names, y = prior_state_course_names)
current_status <- condition_statuses[3]
print(current_status)
status_message <- paste0(
"The following course(s) have been added: ",
paste0(new_course, collapse = ", ")
)
print(status_message)
} else if (length(setdiff(x = newstate_course_names, y = prior_state_course_names)) == 0 &
length(setdiff(x = prior_state_course_names, y = newstate_course_names)) > 0) {
removed_course <-  setdiff(x = prior_state_course_names, y = newstate_course_names)
current_status <- condition_statuses[4]
print(current_status)
status_message <- paste0(
"The following course(s) have been removed: ",
paste0(removed_course, collapse = ", ")
)
print(status_message)
} else {
updated_course <- setdiff(x = newstate_course_versions, y = prior_state_course_versions)
current_status <- condition_statuses[5]
status_message <- paste0(
"The following course version(s) have been updated: ",
paste0(updated_course, collapse = ", ")
)
print(status_message)
}
newstate_course_names
prior_state_course_names
newstate_course_names
newstate_course_names <- output_dataframe$readme_title
prior_state_course_names <- newstate_course_names
if (all(newstate_course_names == prior_state_course_names)) {
current_status <- condition_statuses[1]
status_message <- "Course catalogue script run. No change detected."
print(current_status)
print(status_message)
} else if (length(setdiff(x = newstate_course_names, y = prior_state_course_names)) > 0 &
length(setdiff(x = prior_state_course_names, y = newstate_course_names)) > 0) {
new_course <-  setdiff(x = newstate_course_names, y = prior_state_course_names)
removed_course <-  setdiff(x = prior_state_course_names, y = newstate_course_names)
current_status <- condition_statuses[2]
print(current_status)
status_message <- paste0(
"The following course(s) have been added: ", paste0(new_course, collapse = ", "),
". In addition, the following course(s) have been removed: ", paste0(removed_course, collapse = ", ")
)
print(status_message)
} else if (length(setdiff(x = newstate_course_names, y = prior_state_course_names)) > 0 &
length(setdiff(x = prior_state_course_names, y = newstate_course_names)) == 0) {
new_course <-  setdiff(x = newstate_course_names, y = prior_state_course_names)
current_status <- condition_statuses[3]
print(current_status)
status_message <- paste0(
"The following course(s) have been added: ",
paste0(new_course, collapse = ", ")
)
print(status_message)
} else if (length(setdiff(x = newstate_course_names, y = prior_state_course_names)) == 0 &
length(setdiff(x = prior_state_course_names, y = newstate_course_names)) > 0) {
removed_course <-  setdiff(x = prior_state_course_names, y = newstate_course_names)
current_status <- condition_statuses[4]
print(current_status)
status_message <- paste0(
"The following course(s) have been removed: ",
paste0(removed_course, collapse = ", ")
)
print(status_message)
} else {
updated_course <- setdiff(x = newstate_course_versions, y = prior_state_course_versions)
current_status <- condition_statuses[5]
status_message <- paste0(
"The following course version(s) have been updated: ",
paste0(updated_course, collapse = ", ")
)
print(status_message)
}
if (all(newstate_course_versions == prior_state_course_versions)) {
current_status <- condition_statuses[1]
status_message <- "Course catalogue script run. No change detected."
print(current_status)
print(status_message)
} else if (length(setdiff(x = newstate_course_names, y = prior_state_course_names)) > 0 &
length(setdiff(x = prior_state_course_names, y = newstate_course_names)) > 0) {
new_course <-  setdiff(x = newstate_course_names, y = prior_state_course_names)
removed_course <-  setdiff(x = prior_state_course_names, y = newstate_course_names)
current_status <- condition_statuses[2]
print(current_status)
status_message <- paste0(
"The following course(s) have been added: ", paste0(new_course, collapse = ", "),
". In addition, the following course(s) have been removed: ", paste0(removed_course, collapse = ", ")
)
print(status_message)
} else if (length(setdiff(x = newstate_course_names, y = prior_state_course_names)) > 0 &
length(setdiff(x = prior_state_course_names, y = newstate_course_names)) == 0) {
new_course <-  setdiff(x = newstate_course_names, y = prior_state_course_names)
current_status <- condition_statuses[3]
print(current_status)
status_message <- paste0(
"The following course(s) have been added: ",
paste0(new_course, collapse = ", ")
)
print(status_message)
} else if (length(setdiff(x = newstate_course_names, y = prior_state_course_names)) == 0 &
length(setdiff(x = prior_state_course_names, y = newstate_course_names)) > 0) {
removed_course <-  setdiff(x = prior_state_course_names, y = newstate_course_names)
current_status <- condition_statuses[4]
print(current_status)
status_message <- paste0(
"The following course(s) have been removed: ",
paste0(removed_course, collapse = ", ")
)
print(status_message)
} else {
updated_course <- setdiff(x = newstate_course_versions, y = prior_state_course_versions)
current_status <- condition_statuses[5]
status_message <- paste0(
"The following course version(s) have been updated: ",
paste0(updated_course, collapse = ", ")
)
print(status_message)
}
if (all(newstate_course_versions == prior_state_course_versions)) {
current_status <- condition_statuses[1]
status_message <- "Course catalogue script run. No change detected."
print(current_status)
print(status_message)
} else if (length(setdiff(x = newstate_course_names, y = prior_state_course_names)) > 0 &
length(setdiff(x = prior_state_course_names, y = newstate_course_names)) > 0) {
new_course <-  setdiff(x = newstate_course_names, y = prior_state_course_names)
removed_course <-  setdiff(x = prior_state_course_names, y = newstate_course_names)
current_status <- condition_statuses[2]
print(current_status)
status_message <- paste0(
"The following course(s) have been added: ", paste0(new_course, collapse = ", "),
". In addition, the following course(s) have been removed: ", paste0(removed_course, collapse = ", ")
)
print(status_message)
} else if (length(setdiff(x = newstate_course_names, y = prior_state_course_names)) > 0 &
length(setdiff(x = prior_state_course_names, y = newstate_course_names)) == 0) {
new_course <-  setdiff(x = newstate_course_names, y = prior_state_course_names)
current_status <- condition_statuses[3]
print(current_status)
status_message <- paste0(
"The following course(s) have been added: ",
paste0(new_course, collapse = ", ")
)
print(status_message)
} else if (length(setdiff(x = newstate_course_names, y = prior_state_course_names)) == 0 &
length(setdiff(x = prior_state_course_names, y = newstate_course_names)) > 0) {
removed_course <-  setdiff(x = prior_state_course_names, y = newstate_course_names)
current_status <- condition_statuses[4]
print(current_status)
status_message <- paste0(
"The following course(s) have been removed: ",
paste0(removed_course, collapse = ", ")
)
print(status_message)
} else {
updated_course <- setdiff(x = newstate_course_versions, y = prior_state_course_versions)
current_status <- condition_statuses[5]
print(current_status)
status_message <- paste0(
"The following course version(s) have been updated: ",
paste0(updated_course, collapse = ", ")
)
print(status_message)
}
saveRDS(object = current_status, file = "cache/prior_status.rds")
saveRDS(object = status_message, file = "cache/prior_status_message.rds")
saveRDS(object = newstate_course_names, file = "cache/prior_coursenames.rds")
saveRDS(object = newstate_course_versions, file = "cache/prior_courseversions.rds")
#course names from last run
prior_state_course_names <- readRDS("cache/prior_coursenames.rds")
prior_state_course_names
#course name versions from last run
prior_state_course_versions <- readRDS("cache/prior_courseversions.rds")
prior_state_course_versions
if (all(newstate_course_versions == prior_state_course_versions)) {
current_status <- condition_statuses[1]
status_message <- "Course catalogue script run. No change detected."
print(current_status)
print(status_message)
} else if (length(setdiff(x = newstate_course_names, y = prior_state_course_names)) > 0 &
length(setdiff(x = prior_state_course_names, y = newstate_course_names)) > 0) {
new_course <-  setdiff(x = newstate_course_names, y = prior_state_course_names)
removed_course <-  setdiff(x = prior_state_course_names, y = newstate_course_names)
current_status <- condition_statuses[2]
print(current_status)
status_message <- paste0(
"The following course(s) have been added: ", paste0(new_course, collapse = ", "),
". In addition, the following course(s) have been removed: ", paste0(removed_course, collapse = ", ")
)
print(status_message)
} else if (length(setdiff(x = newstate_course_names, y = prior_state_course_names)) > 0 &
length(setdiff(x = prior_state_course_names, y = newstate_course_names)) == 0) {
new_course <-  setdiff(x = newstate_course_names, y = prior_state_course_names)
current_status <- condition_statuses[3]
print(current_status)
status_message <- paste0(
"The following course(s) have been added: ",
paste0(new_course, collapse = ", ")
)
print(status_message)
} else if (length(setdiff(x = newstate_course_names, y = prior_state_course_names)) == 0 &
length(setdiff(x = prior_state_course_names, y = newstate_course_names)) > 0) {
removed_course <-  setdiff(x = prior_state_course_names, y = newstate_course_names)
current_status <- condition_statuses[4]
print(current_status)
status_message <- paste0(
"The following course(s) have been removed: ",
paste0(removed_course, collapse = ", ")
)
print(status_message)
} else {
updated_course <- setdiff(x = newstate_course_versions, y = prior_state_course_versions)
current_status <- condition_statuses[5]
print(current_status)
status_message <- paste0(
"The following course version(s) have been updated: ",
paste0(updated_course, collapse = ", ")
)
print(status_message)
}
source('~/Documents/DSCA_course_catalogue_dev/src/initialise.R', echo=TRUE)
source('~/Documents/DSCA_course_catalogue_dev/src/initialise.R', echo=TRUE)
source('~/Documents/DSCA_course_catalogue_dev/src/initialise.R', echo=TRUE)
current_status == 100
email_text <- paste("Automated email sent from dsca_course_catalogue_dev version",
version_number,
version_number + 0.1,
"Status Condition =",
current_status,
"Status message =",
status_message)
email_text
email_text <- paste("Automated email sent from dsca_course_catalogue_dev version",
version_number,
". Status Condition =",
current_status,
". Status message =",
status_message)
email_text
email_text <- paste("Automated email sent from dsca_course_catalogue_dev version",
version_number,
"Please find attached the latest version of DSCA course catalogue.",
". Status Condition =",
current_status,
". Status message =",
status_message)
email_text
email_text <- paste("Automated email sent from dsca_course_catalogue_dev version",
version_number,
". Please find attached the latest version of DSCA course catalogue.",
". Status Condition =",
current_status,
". Status message =",
status_message)
email_text
email_text <- paste("Automated email sent from dsca_course_catalogue_dev version",
version_number,
". Please find attached the latest version of DSCA course catalogue.",
" Status Condition =",
current_status,
". Status message =",
status_message)
email_text
source('~/Documents/DSCA_course_catalogue_dev/src/initialise.R', echo=TRUE)
email_text <- paste("Automated email sent from dsca_course_catalogue_dev version",
version_number,
". Status Condition =",
current_status,
". Status message =",
status_message,
sep="\n")
email_text
email_text <- cat(paste("Automated email sent from dsca_course_catalogue_dev version",
version_number,
". Status Condition =",
current_status,
". Status message =",
status_message,
sep="\n"))
email_text
email_text <- cat(paste("Automated email sent from dsca_course_catalogue_dev version",
version_number,
". Status Condition =",
current_status,
". Status message =",
status_message,
sep="\n"))
email_text <- paste("Automated email sent from dsca_course_catalogue_dev version",
version_number,
". Status Condition =",
current_status,
". Status message =",
status_message,
collapse="\n")
email_text
email_text <- paste("Automated email sent from dsca_course_catalogue_dev version.",
version_number,
"Status Condition =",
current_status,
"Status message =",
status_message,
collapse="\n")
email_text
source('~/Documents/DSCA_course_catalogue_dev/src/initialise.R', echo=TRUE)
install.packages('miniUI')
install.packages('shiny')
install.packages('shinyFiles')
install.packages('cronR')
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
source('~/Documents/DSCA_course_catalogue_dev/src/initialise.R', echo=TRUE)
gm_auth(email = TRUE, cache = ".secret")
source('~/Documents/DSCA_course_catalogue_dev/src/initialise.R', echo=TRUE)
cronR:::cron_rstudioaddin()
source('~/Documents/DSCA_course_catalogue_dev/src/initialise.R', echo=TRUE)
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
source('~/Documents/DSCA_course_catalogue_dev/src/initialise.R', echo=TRUE)
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
source('src/initialise.R')
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
system()
Sys.info()
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
source('/Users/richardleyshon/Documents/DSCA_course_catalogue_dev/src/initialise.R')
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
library(pacman)
pacman::p_load("plyr, dplyr, rvest, selectr, xml2, stringr, jsonlite, tidyr, purrr, httr, httpuv, rlist, gmailr")
pacman::p_load(plyr, dplyr, rvest, selectr, xml2, stringr, jsonlite, tidyr, purrr, httr, httpuv, rlist, gmailr)
source('~/Documents/DSCA_course_catalogue_dev/cronr_executable.R', echo=TRUE)
source('~/Documents/DSCA_course_catalogue_dev/cronr_executable.R', echo=TRUE)
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
fold <- '/Users/richardleyshon/Documents/DSCA_course_catalogue_dev/zipped_output'
fold
# get all files in the directories, recursively
f <- list.files(fold, include.dirs = F, full.names = T, recursive = T)
f
# get all files in the directories, recursively
f <- grep(list.files(fold, include.dirs = F, full.names = T, recursive = T),
pattern = 'zipped_output_readme.md', invert = TRUE, value = TRUE)
f
# remove the files
file.remove(f)
source('~/Documents/DSCA_course_catalogue_dev/src/initialise.R', echo=TRUE)
source('~/Documents/DSCA_course_catalogue_dev/src/initialise.R', echo=TRUE)
remove(list = 'condition_statuses',
'email_text',
'newstate_course_names',
'newstate_course_versions',
'prior_state_course_names',
'prior_state_course_versions',
)
source('~/Documents/DSCA_course_catalogue_dev/src/initialise.R', echo=TRUE)
remove(list = 'condition_statuses',
'email_text',
'newstate_course_names',
'newstate_course_versions',
'prior_state_course_names',
'prior_state_course_versions',
)
source('~/Documents/DSCA_course_catalogue_dev/src/initialise.R', echo=TRUE)
View(cbind.fill)
View(output_dataframe)
pages <- parsed_course_pages[[1]]
list_text <- pages %>% html_nodes("li") %>% html_text()
list_text
#lower for pattern matching
lowered_list_text <- list_text %>% tolower()
lowered_list_text
#subset this character vector by:
#start  - the last text value that contains "\n                  tags" plus one
#end - the first value that contains 'Github, Inc.' minus one
#find first index
start_index <- grep("\n                  tags", lowered_list_text)[length(grep("\n                  tags", lowered_list_text))] + 1
start_index
#find end index - updated to find f2f index
end_index <- grep("face to face", lowered_list_text)[1] - 3
end_index
start_index
lowered_list_text
#subset this character vector by:
#start  - the last text value that contains "tags" plus one
#end - the first value that contains 'Github, Inc.' minus one
#find first index
start_index <- grep("tags", lowered_list_text)[length(grep("tags", lowered_list_text))] + 1
start_index
source('~/Documents/DSCA_course_catalogue_dev/src/initialise.R', echo=TRUE)
View(output_dataframe)
source('~/Documents/DSCA_course_catalogue_dev/src/initialise.R', echo=TRUE)
#step to clear out any previous zipped folder prior to running
fold <- '/zipped_output'
# get all files in the directories, recursively, apart from the readme
f <- grep(list.files(fold, include.dirs = F, full.names = T, recursive = T),
pattern = 'zipped_output_readme.md', invert = TRUE, value = TRUE)
f
list.files(fold, include.dirs = F, full.names = T, recursive = T)
list.files(fold, include.dirs = F, full.names = T, recursive = T)
#step to clear out any previous zipped folder prior to running
fold <- '/zipped_output/'
list.files(fold, include.dirs = F, full.names = T, recursive = T)
list.files(path = 'output_data', pattern = 'xlsx$')
list.files(path = fold, include.dirs = F, full.names = T, recursive = T, pattern = 'zip$')
#step to clear out any previous zipped folder prior to running
fold <- 'zipped_output'
list.files(path = fold, include.dirs = F, full.names = T, recursive = T, pattern = 'zip$')
# get all files in the directories, recursively, apart from the readme
f <- grep(list.files(path = fold, include.dirs = F, full.names = T, recursive = T, pattern = 'zip$'),
pattern = 'zipped_output_readme.md', invert = TRUE, value = TRUE)
f
# remove the files
file.remove(f)
source('~/Documents/DSCA_course_catalogue_dev/src/initialise.R', echo=TRUE)
source('~/Documents/DSCA_course_catalogue_dev/src/initialise.R', echo=TRUE)
